<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnExit.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wIKvAAAAAElFTkSuQmCC
</value>
  </data>
</root>